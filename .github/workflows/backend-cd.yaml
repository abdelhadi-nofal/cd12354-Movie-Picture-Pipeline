name: Frontend Continuous Deployment

on:
  push:
    branches: [main]
    paths: [starter/frontend/**]
  workflow_dispatch:

env:
  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
  REACT_APP_MOVIE_API_URL: ${{ secrets.REACT_APP_MOVIE_API_URL }}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: starter/frontend/package-lock.json
      - name: Install Dependencies
        run: cd starter/frontend && npm ci
      - name: Run Linter
        run: cd starter/frontend && npm run lint

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: starter/frontend/package-lock.json
      - name: Install Dependencies
        run: cd starter/frontend && npm ci
      - name: Run Tests
        run: cd starter/frontend && npm test

  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - uses: actions/checkout@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build and Push Docker Image
        run: |
          cd starter/frontend
          docker buildx create --name mybuilder || true
          docker buildx use mybuilder
          docker buildx build \
            --platform=linux/amd64 \
            --build-arg REACT_APP_MOVIE_API_URL=$REACT_APP_MOVIE_API_URL \
            -t ${{ env.ECR_REGISTRY }}/frontend:${GITHUB_SHA} \
            --push .

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Install or Update AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Generate Kubeconfig
        run: |
          aws eks update-kubeconfig --name cluster --region us-east-1
      - name: Deploy with Kustomize
        run: |
          cd starter/frontend/k8s
          kustomize edit set image frontend=${{ env.ECR_REGISTRY }}/frontend:${GITHUB_SHA}
          kustomize build | kubectl apply -f -