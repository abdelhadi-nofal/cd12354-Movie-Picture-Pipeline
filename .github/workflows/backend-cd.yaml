name: Backend Continuous Deployment

on:
  push:
    branches: [main]
    paths: [starter/backend/**]
  workflow_dispatch:

env:
  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9
      - name: Install Pipenv
        run: pip install pipenv
      - name: Install Dependencies
        working-directory: starter/backend
        run: pipenv install --dev
      - name: Run Linter
        working-directory: starter/backend
        run: pipenv run flake8 .

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9
      - name: Install Pipenv
        run: pip install pipenv
      - name: Install Dependencies
        working-directory: starter/backend
        run: pipenv install
      - name: Run Tests
        working-directory: starter/backend
        run: pipenv run python -m pytest

  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - uses: actions/checkout@v3
      - name: Build Docker Image
        working-directory: starter/backend
        run: |
          docker buildx create --name mybuilder || true
          docker buildx use mybuilder
          docker buildx build \
            --platform=linux/amd64 \
            -t ${{ env.ECR_REGISTRY }}/backend:${GITHUB_SHA} \
            --push .

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Generate Kubeconfig
        run: |
          aws eks update-kubeconfig --name cluster --region us-east-1
      - name: Deploy with Kustomize
        run: |
          cd starter/backend/k8s
          kustomize edit set image backend=${{ env.ECR_REGISTRY }}/backend:${GITHUB_SHA}
          kustomize build | kubectl apply -f -